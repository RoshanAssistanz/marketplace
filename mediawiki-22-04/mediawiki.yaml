- name: MediaWiki Setup
  hosts: localhost
  tasks:
      - name: Restarting sshd
        shell: "sed -i 's/#Match User anoncvs/ForceCommand echo Please wait until the installation is completed..../g' /etc/ssh/sshd_config && systemctl restart sshd"

      - name: Updating Packages
        ansible.builtin.apt:
          update_cache: yes
         
      - debug:
         msg: "Installing Apache"

      - name: Installing apache
        apt:
          name: [ 'apache2' , 'python3-certbot-apache' ]
          state: latest

      - name: Removing site files
        file:
          path: "{{ item }}"
          state: absent
        with_items: 
          - /etc/apache2/sites-available/000-default.conf
          - /var/www/html/index.html

      - name: Copy files
        copy:
          src: "{{ item.confsrc }}"
          dest: "{{ item.confdest }}"
        with_items: 
          - { confsrc: '/usr/local/src/mediawiki-22-04/etc/apache2/sites-available/mediawiki.conf', confdest: '/etc/apache2/sites-available/'}
          - { confsrc: '/usr/local/src/mediawiki-22-04/var/www/html/index.html', confdest: '/var/www/html/'}

      - name: Starting service apache2
        service:
          name: apache2
          state: started 

      - name: Getting the status of the service
        shell: systemctl status apache2 | grep 'since'
        register: status

      - debug:
          var: status.stdout 

      - debug:
         msg: "Installing Mysql"

      - name: Installing mysql
        apt:
          name: mysql-server
          state: latest

      - name: Starting service mysql
        service:
          name: mysql
          state: started 

      - name: Getting the status of the service
        shell: systemctl status mysql | grep 'since'
        register: status

      - debug:
          var: status.stdout 

      - name: Generating root password
        shell: openssl rand -hex 24
        register: rootpassword

      - debug:
         var: rootpassword.stdout

      - name: Storing mysql password
        copy:
          dest: "/root/.mysql_root_password"
          content: |
            root_mysql_pass = "{{ rootpassword.stdout }}"

      - name: Remove anonymous users
        command: 'mysql -ne "{{ item }}"'
        with_items:
          - DELETE FROM mysql.user WHERE User=''
        changed_when: False

      - name: Disallow root login remotely
        command: 'mysql -ne "{{ item }}"'
        with_items:
          - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
        changed_when: False

      - name: Remove test database and access to it
        command: 'mysql -ne "{{ item }}"'
        with_items:
          - DROP DATABASE IF EXISTS test
          - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
        changed_when: False

      - name: Reload privilege tables
        command: 'mysql -ne "{{ item }}"'
        with_items:
          - FLUSH PRIVILEGES
        changed_when: False

      - name: Alter Password
        shell: "{{ item }}"
        with_items:
          - mysql -n --execute="ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ rootpassword.stdout }}';"

      - debug:
          msg: "Mysql root password is stored under /root/.mysql_root_password"

      # - name: Change login type
      #   shell: 'mysql -u root -p{{ rootpassword.stdout }} -n --execute="ALTER USER 'root'@'localhost' IDENTIFIED WITH auth_socket;" > /dev/null 2>&1'

      - debug:
         msg: "Installing PHP"

      - name: Installation install software-properties-common
        apt: name=software-properties-common
      
      - name: "Repo PHP 7.4"
        apt_repository:
          repo="ppa:ondrej/php"
    
      - name: Installation PHP
        apt: 
          name: php7.4
          state: present

      - shell: php -v
        register: phpversion

      - debug:
          var: phpversion.stdout_lines 

      - name: Installing PHP dependencies
        apt:
          name: [ 'php7.4-mysql' , 'php7.4-zip' , 'php7.4-dom' , 'php7.4-intl' , 'php7.4-mbstring' , 'php7.4-curl' , 'php7.4-gd' ]
          state: present

      - name: Generating mediawiki Admin password
        shell: openssl rand -hex 24
        register: adminmediawikipassword

      - debug:
         var: adminmediawikipassword.stdout

      - name: Storing mediawiki Admin password
        copy:
          dest: "/root/.mediawiki_admin_details"
          content: |
            mediawiki_admin_username = admin
            mediawiki_admin__password = "{{ adminmediawikipassword.stdout }}"

      - name: Generating mediawiki password
        shell: openssl rand -hex 24
        register: mediawikipassword

      - debug:
         var: mediawikipassword.stdout

      - name: Storing mediawiki password
        copy:
          dest: "/root/.mediawiki_database_details"
          content: |
            mediawiki_database_name = mediawiki_db          
            mediawiki_database_user = mediawiki_user
            mediawiki_user_password = "{{ mediawikipassword.stdout }}"

      - name: Creating mediawiki configurations
        shell: "{{ item }}"
        with_items:
          - mysql -e 'create database mediawiki_db' -u root -p{{ rootpassword.stdout }}
          - mysql -e "CREATE USER 'mediawiki_user'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mediawikipassword.stdout }}';" -u root -p{{ rootpassword.stdout }}
          - mysql -e "GRANT ALL PRIVILEGES ON mediawiki_db.* TO 'mediawiki_user'@'localhost';" -u root -p{{ rootpassword.stdout }}

      - name: Download Mediawiki files
        ansible.builtin.unarchive:
          src: https://releases.wikimedia.org/mediawiki/1.39/mediawiki-1.39.3.tar.gz
          dest: /usr/local/src/
          remote_src: yes
      
      - name: Syncing the files
        shell: rsync -zavh /usr/local/src/mediawiki-1.39.3/ /var/www/html/mediawiki/

      - name: Configuring mediawiki
        shell: php /var/www/html/mediawiki/maintenance/install.php --lang=en --confpath=/var/www/html/mediawiki/ --scriptpath=/mediawiki --dbtype=mysql --dbserver="localhost" --dbname=mediawiki_db  --dbuser=mediawiki_user --dbpass={{ mediawikipassword.stdout }} "MediaWiki Page" "admin"	--pass={{ adminmediawikipassword.stdout }} 


      - name: Change ownership of a directory
        ansible.builtin.file:
          path: /var/www
          state: directory
          recurse: yes
          owner: www-data
          group: www-data

      - name: Enable the Virtual Host Configuration and apache modules
        shell: "{{ item }}"
        with_items:
          - a2dissite 000-default
          - a2ensite mediawiki.conf
          # - a2enmod dir env headers mime rewrite setenvif

      - name: Installing postfix
        apt:
          name: [ 'postfix' , 'mailutils' ]
          state: latest      

      - name: Creating a directory for shell script
        ansible.builtin.file:
          path: /opt/cloudstack
          state: directory         
          
      - name: Copy files for shell script
        copy:
          src: "{{ item.confsrc }}"
          dest: "{{ item.confdest }}"
        with_items: 
          - { confsrc: '/usr/local/src/mediawiki-22-04/opt/cloudstack/mediawiki_cleanup.sh', confdest: '/opt/cloudstack/'}     

      - name: Adding a line for shell script
        lineinfile:
          path: /root/.bashrc
          line: "chmod +x /opt/cloudstack/mediawiki_cleanup.sh && /opt/cloudstack/mediawiki_cleanup.sh"
          state: present   

      - name: Restarting sshd
        shell: "sed -i 's/ForceCommand echo Please wait until the installation is completed..../#Match User anoncvs/g' /etc/ssh/sshd_config && systemctl restart sshd"
